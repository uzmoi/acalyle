name: CI

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      turbo-hash: ${{ steps.turbo-hash.outputs.hash }}
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - id: turbo-hash
        run: |
          hash=$(npm run codegen -- --dry=json | sha256sum | cut -d ' ' -f 1)
          echo "hash=$hash" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        with:
          path: |
            node_modules/.cache/turbo
            **/.turbo
          key: ${{ runner.os }}-turbo-${{ steps.turbo-hash.outputs.hash }}
          restore-keys: ${{ runner.os }}-turbo-

      - run: npm run codegen
  test:
    needs: prepare
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - uses: actions/cache/restore@v4
        with:
          path: |
            node_modules/.cache/turbo
            **/.turbo
          key: ${{ runner.os }}-turbo-${{ needs.prepare.outputs.turbo-hash }}
          fail-on-cache-miss: true

      - run: npm run coverage -- --output-logs=new-only

      - id: coverage_files
        run: |
          files=$(ls {apps,packages}/*/coverage/coverage-final.json | paste -sd ",")
          echo "files=$files" >> $GITHUB_OUTPUT

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4 # cspell:word codecov
        with:
          files: ${{ steps.coverage_files.outputs.files }}
  lint:
    needs: prepare
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - uses: actions/cache/restore@v4
        with:
          path: |
            node_modules/.cache/turbo
            **/.turbo
          key: ${{ runner.os }}-turbo-${{ needs.prepare.outputs.turbo-hash }}
          fail-on-cache-miss: true

      - run: npm run lint -- --output-logs=new-only
  chromatic:
    needs: prepare
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - uses: actions/cache/restore@v4
        with:
          path: |
            node_modules/.cache/turbo
            **/.turbo
          key: ${{ runner.os }}-turbo-${{ needs.prepare.outputs.turbo-hash }}
          fail-on-cache-miss: true

      - run: npm run codegen -- --output-logs=new-only

      - name: Run Chromatic on @acalyle/client
        uses: chromaui/action@latest # cspell:word chromaui
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          workingDir: apps/client
