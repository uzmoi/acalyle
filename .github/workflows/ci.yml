name: CI

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - id: pre-install
        run: echo "hash=${{ hashFiles('**/package-lock.json') }}" >> $GITHUB_OUTPUT
      - if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm install
      - if: steps.pre-install.outputs.hash != hashFiles('**/package-lock.json')
        run: exit 1
  test:
    needs: prepare
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - uses: actions/cache/restore@v3
        id: npm-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - uses: dtolnay/rust-toolchain@stable # cspell:word dtolnay
      - uses: Swatinem/rust-cache@v2 # cspell:word Swatinem

      - run: npm run coverage

      - id: coverage_files
        run: |
          files=$(ls {apps,packages}/*/coverage/coverage-final.json | paste -sd ",")
          echo "files=$files" >> $GITHUB_OUTPUT

        # cspell:word codecov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ${{ steps.coverage_files.outputs.files }}
  lint:
    needs: prepare
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - uses: actions/cache/restore@v3
        id: npm-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2

      # TODO: その場しのぎをやめる
      - run: npm run build -- --filter='./packages/*'
      - run: npm run build -w @acalyle/server
      - run: npm run codegen -ws
        continue-on-error: true
      - run: npm run lint
  chromatic:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - uses: actions/cache/restore@v3
        id: npm-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Run Chromatic on @acalyle/ui
        uses: chromaui/action@latest # cspell:word chromaui
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN_UI }}
          workingDir: packages/ui
          exitZeroOnChanges: false

      - name: Run Chromatic on @acalyle/client
        uses: chromaui/action@latest # cspell:word chromaui
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          workingDir: apps/client
          exitZeroOnChanges: false
